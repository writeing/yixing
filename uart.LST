C51 COMPILER V9.03   UART                                                                  08/06/2015 16:06:49 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\output\uart.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE uart.c LARGE BROWSE DEBUG OBJECTEXTEND OBJECT(.\output\uart.obj)

line level    source

   1          /************************************************************************************
   2          Copyright,  LCE STUDIO  
   3          程序名称：串口通信（晶振频率18.432MHz）  
   4          功能说明: 串口1和串口2初始化,字符发送与字符串发送函数,波特率9600bps
   5          程序版本：1.0 （2014/06）
   6          阿里旺旺：rob1983
   7          淘宝店铺：http://shop67639654.taobao.com 
   8          ************************************************************************************/ 
   9          
  10          #include "stc15f2k60s2.h"
  11          #include "intrins.h"
  12          #include "uart.h"
  13          #include "delay.h"
  14          
  15          void SendData(unsigned char ch);
  16          void SendString(char *s);
  17          void UartInit(void);
  18          void WifiSendData(unsigned char ch);
  19          void WifiSendString(char *s);
  20          
  21          
  22          /*----------------------------
  23          串口初始化
  24          ----------------------------*/
  25          
  26          void UartInit(void)             //115200bps@18.432MHz
  27          {
  28   1              PCON &= 0x7F;           
  29   1              SCON = 0x50;            //8位数据，可变波特率
  30   1              AUXR |= 0x40;           //定时器1时钟1为FOSC,即1T
  31   1              AUXR &= 0xFE;           //串口1选择定时器1为波特率发生器
  32   1              TMOD &= 0x0F;           //清除定时器1模式位
  33   1              TMOD |= 0x20;           //设定定时器1为8位自动重装方式
  34   1              TL1 = 0xFD;             //设定定时初值
  35   1              TH1 = 0xFD;                     //设定定时器重装值
  36   1              ET1 = 0;                //禁止定时器1中断
  37   1              TR1 = 1;                //启动定时器1
  38   1      
  39   1              S2CON = 0x50;           //8位数据，可变波特率
  40   1              AUXR |= 0x04;           //定时器2时钟1为FOSC,即1T
  41   1              IE2=0x01;
  42   1      //  以下为单片机串口2的波特率初始化值，因ESP8266模块串口波特率可能为9600和115200，使用过程中如无法通信，可
             -通过以下串口初始化时进行选择。
  43   1              T2L = 0xE6;             //波特率9600设定初始值
  44   1              T2H = 0xFE;             //波特率9600设定初始值
  45   1      //      T2L = 0xD8;             //波特率115200设定初始值
  46   1      //      T2H = 0xFF;             //波特率115200设定初始值        
  47   1              
  48   1              AUXR |= 0x10;           //启动定时器2
  49   1      }
  50          
  51          
  52          /*----------------------------
  53          通过串口1发送串口数据
  54          ----------------------------*/
C51 COMPILER V9.03   UART                                                                  08/06/2015 16:06:49 PAGE 2   

  55          void U1SendData(unsigned char ch)
  56          {
  57   1          SBUF = ch;                 //写数据到UART数据寄存器
  58   1              while(TI == 0);
  59   1              TI = 0;
  60   1      }
  61          
  62          /*----------------------------
  63          通过串口1发送字符串
  64          ----------------------------*/
  65          void U1SendString(char *s)
  66          {
  67   1          while ((*s)!='\0')                  //检测字符串结束标志
  68   1          {
  69   2              U1SendData(*s++);         //发送当前字符
  70   2          }
  71   1      }
  72          
  73          /*----------------------------
  74          通过串口2发送串口数据
  75          ----------------------------*/
  76          void WifiSendData(unsigned char ch)
  77          {
  78   1          S2BUF = ch;                 //写数据到UART数据寄存器
  79   1              while(!(S2CON&S2TI));    
  80   1          S2CON&=~S2TI;
  81   1      }
  82          
  83          /*----------------------------
  84          通过串口2发送字符串
  85          ----------------------------*/
  86          void WifiSendString(char *s)
  87          {
  88   1              IE2 = 0x00; 
  89   1              while ((*s)!='\0')                  //检测字符串结束标志
  90   1          {
  91   2              WifiSendData(*s++);         //发送当前字符
  92   2          }
  93   1              WifiSendData('\r');
  94   1              WifiSendData('\n');
  95   1              IE2 = 0x01;
  96   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    184    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
